DTSP

FIR FILTER DESIGNING USING RECTANGULAR WINDOW TECHNIQUE

AIM: To design FIR digital filter using the rectangular window.

SOFTWARE USED: MATLAB Version 8.6 (R2015b)
PROGRAM:
%To design FIR digital filter using the rectangular window.

clc;
clear all;
close all;
rp=input('enter the passband ripple');
rs=input('enter the stopband ripple');
fp=input('enter the passband frequency');
fs=input('enter the stopband frequency');
f=input('enter the sampling frequency');
wp=2*fp/f;
ws=2*fs/f;
num= -20*log10(sqrt(rp*rs))-13; %numerator for finding the order of the filter
dem=14.6*(fs-fp)/f;  % denominator for finding the order of the filters.
n=ceil(num/dem); % to round off the order to the nearest integer value.
n1=n+1;
if(rem(n,2)~=0) % to check whether the order is even or not.
n1=n;
n=n-1;
end
y=rectwin(n1);
 
%LOW-PASS FILTER
b=fir1(n,wp,y); %to design low pass filter
[h,o]=freqz(b,1,256);
m=20*log(abs(h)); % to obtain gain in dB
subplot(2,2,1);
plot(o/pi,m); 
ylabel('Gain in dB');
xlabel(' (a) Normalised Frequency');
title('Low pass Filter');
 
%HIGH-PASS FILTER
b=fir1(n,wp,'high',y); %to design high pass filter
[h,o]=freqz(b,1,256);
m=20*log10(abs(h));
subplot(2,2,2);
plot(o/pi,m);
ylabel('Gain in dB');
xlabel(' (b) Normalised frequency');
title('High pass Filter'); 
 
%BAND PASS FILTER
wn=[wp ws]; % to set the passband of a filter
b=fir1(n,wn,y);
[h,o]=freqz(b,1,256);
m=20*log10(abs(h));
subplot(2,2,3);
plot(o/pi,m);
ylabel('Gain in dB');
xlabel(' (c) Normalised Frequency');
title('Band pass Filter');
 
%BAND STOP FILTER
b=fir1(n,wn,'stop',y); % to design the bandstop filter.
[h,o]=freqz(b,1,256);
m=20*log10(abs(h));
subplot(2,2,4);
plot(o/pi,m);
ylabel('Gain in dB');
xlabel(' (d) Normalised frequency');
title('Band stop Filter');
gtext('nameâ€™);















OUTPUT:
 
